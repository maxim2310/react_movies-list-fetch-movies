{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","components/API/API.ts","App.tsx","index.tsx"],"names":["MovieCard","props","movie","className","src","Poster","alt","Title","Plot","MoviesList","movies","map","imdbID","FindMovie","setMovies","moviesList","useState","movieFromServer","setMovieFromServer","movieTitle","setMovieTitle","errorFromServer","setErrorFromServer","isLoading","setIsLoading","console","log","htmlFor","type","id","placeholder","classNames","value","onChange","event","target","CircularProgress","color","onClick","endPoint","preventDefault","fetch","then","response","ok","Error","status","statusText","json","Response","catch","some","App","prev","newValue","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c2c6c2e2.chunk.js","sourcesContent":["import React from 'react';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie;\n};\n\nexport const MovieCard: React.FC<Props> = (props) => {\n  const { movie } = props;\n\n  return (\n    <div className=\"card\">\n      <div className=\"card-image\">\n        <figure className=\"image is-4by3\">\n          <img\n            src={movie.Poster}\n            alt=\"Film logo\"\n          />\n        </figure>\n      </div>\n      <div className=\"card-content\">\n        <div className=\"media\">\n          <div className=\"media-left\">\n            <figure className=\"image is-48x48\">\n              <img\n                src=\"images/imdb-logo.jpeg\"\n                alt=\"imdb\"\n              />\n            </figure>\n          </div>\n          <div className=\"media-content\">\n            <p className=\"title is-8\">{movie.Title}</p>\n          </div>\n        </div>\n\n        <div className=\"content\">\n          {movie.Plot}\n          <br />\n        </div>\n      </div>\n    </div>\n  );\n};\n","import React from 'react';\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\n\ninterface Props {\n  movies: Movie[];\n}\n\nexport const MoviesList: React.FC<Props> = (props) => {\n  const { movies } = props;\n\n  return (\n    <div className=\"movies\">\n      {movies.map(movie => (\n        <MovieCard\n          key={movie.imdbID}\n          movie={movie}\n        />\n      ))}\n    </div>\n  );\n};\n","/* eslint-disable jsx-a11y/label-has-associated-control */\nimport { CircularProgress } from '@mui/material';\nimport classNames from 'classnames';\nimport React, { useState } from 'react';\nimport { getMovie } from '../API/API';\nimport './FindMovie.scss';\n\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  setMovies: (prev: Movie[], newValue: Movie) => void\n  moviesList: Movie[];\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies, moviesList }) => {\n  const [movieFromServer, setMovieFromServer] = useState<Movie>();\n  const [movieTitle, setMovieTitle] = useState('');\n  const [errorFromServer, setErrorFromServer] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const searchMovie = (event: React.FormEvent): void => {\n    event.preventDefault();\n    setIsLoading(true);\n    setErrorFromServer(false);\n    getMovie(movieTitle)\n      .then(response => {\n        setIsLoading(false);\n        if (response.Response === 'False') {\n          setErrorFromServer(true);\n        }\n\n        return setMovieFromServer(response);\n      })\n      .catch(() => setErrorFromServer(true));\n    setMovieTitle('');\n  };\n\n  const setMoviesList = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (!moviesList.some(movie => movie.imdbID === movieFromServer?.imdbID)\n      && movieFromServer?.Response !== 'False') {\n      if (movieFromServer) {\n        setMovies(moviesList, movieFromServer);\n      }\n    }\n  };\n\n  function cons() {\n    // eslint-disable-next-line no-console\n    return console.log(movieTitle, movieFromServer);\n  }\n\n  cons();\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className={classNames('input', { 'is-danger': errorFromServer && !movieTitle })}\n              value={movieTitle}\n              onChange={event => (setMovieTitle(event.target.value))}\n            />\n          </div>\n          {errorFromServer && !movieTitle && (\n            <p className=\"help is-danger\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            {isLoading ? (\n              <CircularProgress color=\"primary\" />\n            ) : (\n              <button\n                type=\"button\"\n                className=\"button is-light\"\n                onClick={searchMovie}\n              >\n                Find a movie\n              </button>\n            )}\n          </div>\n\n          <div className=\"control\">\n            <button\n              type=\"button\"\n              className=\"button is-primary\"\n              onClick={setMoviesList}\n            >\n              Add to the list\n            </button>\n          </div>\n        </div>\n      </form>\n\n      <div className=\"container\">\n        <h2 className=\"title\">Preview</h2>\n        {movieFromServer && !errorFromServer && !isLoading && <MovieCard movie={movieFromServer} />}\n      </div>\n    </>\n  );\n};\n","const BASE_URL = 'https://www.omdbapi.com/?apikey=d2393c73&t=';\n\nexport const getMovie = (endPoint: string): Promise<Movie> => {\n  return fetch(`${BASE_URL}${endPoint}`)\n    .then(response => {\n      if (!response.ok) {\n        throw new Error(`${response.status} - ${response.statusText}`);\n      }\n\n      return response.json();\n    });\n};\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\n\nexport const App: React.FC = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const likeRedux = (prev: Movie[], newValue: Movie) => {\n    return setMovies([...prev, newValue]);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n      <div className=\"sidebar\">\n        <FindMovie setMovies={likeRedux} moviesList={movies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}